# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2017-11-04 20:50
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=100, unique=True, validators=[django.core.validators.EmailValidator])),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='GoldPolicy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apc_currency', models.CharField(blank=True, choices=[('GBP', 'GBP - British Pound (£)'), ('EUR', 'EUR - Euro (€)'), ('USD', 'USD - United States Dollar ($)'), ('CHF', 'CHF - Swiss Franc (SFr.)')], max_length=10, null=True)),
                ('apc_value', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Gold policies',
            },
        ),
        migrations.CreateModel(
            name='GreenPolicy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(choices=[('AAM', "Author's accepted manuscript (post-print)"), ('NONE', 'No version allowed'), ('SUBMITTED', 'Submitted manuscript (pre-print)'), ('SUPPLIED', 'Publisher-supplied version'), ('VOR', 'Version of record (published version)')], max_length=20)),
                ('version_embargo_months', models.CharField(blank=True, max_length=20, null=True)),
                ('version_green_licence', models.CharField(blank=True, choices=[('CC BY', 'CC BY'), ('CC BY-NC', 'CC BY-NC'), ('CC BY-NC-ND', 'CC BY-NC-ND'), ('CC BY-NC-SA', 'CC BY-NC-SA'), ('CC BY-ND', 'CC BY-ND'), ('CC BY-SA', 'CC BY-SA'), ('CUSTOM', 'CUSTOM'), ('UNCLEAR', 'UNCLEAR')], default='CUSTOM', max_length=20, null=True)),
                ('version_note', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Green policies',
            },
        ),
        migrations.CreateModel(
            name='Licence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=50)),
                ('long_name', models.CharField(blank=True, max_length=200, null=True)),
                ('url', models.URLField(blank=True, null=True)),
            ],
            options={
                'ordering': ('short_name',),
            },
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Please enter the name of the publisher, journal or conference.', max_length=200)),
                ('name_status', models.CharField(choices=[('PRIMARY', 'Preferred name'), ('SYNONYM', 'Alternate representation'), ('UNCERTAIN', 'Uncertain')], default='PRIMARY', max_length=20)),
                ('type', models.CharField(choices=[('CONFERENCE', 'Conference'), ('JOURNAL', 'Journal'), ('PUBLISHER', 'Publisher')], default='JOURNAL', max_length=20)),
                ('url', models.URLField(blank=True, max_length=600, null=True)),
                ('issn', models.CharField(blank=True, help_text='Please use the format: <em>0000-0000</em>.', max_length=10, null=True, validators=[django.core.validators.RegexValidator('[0-9]{4,4}-[0-9]{4,4}', 'Please enter a issn in the format 0000-0000')])),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='children', to='policies.Node')),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='policies.Node')),
            ],
        ),
        migrations.CreateModel(
            name='OaStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oa_status', models.CharField(choices=[('FULLY_OA', 'Open Access Journal/Publisher'), ('HYBRID', 'Hybrid Journal/Publisher'), ('SUBSCRIPTION', 'Subscription Journal/Publisher')], max_length=20)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='policies.Node')),
            ],
            options={
                'verbose_name_plural': 'Oa status',
            },
        ),
        migrations.CreateModel(
            name='Outlet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('url', models.URLField(blank=True, null=True)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Responsibility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Oa status',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='RetrospectiveOaPolicy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('available', models.BooleanField()),
                ('deadline', models.CharField(blank=True, max_length=600, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='policies.Node')),
            ],
            options={
                'verbose_name_plural': 'Retrospective OA policies',
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('url', models.URLField(blank=True, max_length=600, null=True, unique=True)),
                ('type', models.CharField(choices=[('DATASET', 'Dataset'), ('PUBLICATION', 'Publication'), ('WEBSITE', 'Website')], max_length=20)),
                ('file', models.FileField(blank=True, null=True, upload_to='sources')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.AddField(
            model_name='retrospectiveoapolicy',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='policies.Source'),
        ),
        migrations.AddField(
            model_name='oastatus',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='policies.Source'),
        ),
        migrations.AddField(
            model_name='node',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='policies.Source'),
        ),
        migrations.AddField(
            model_name='node',
            name='synonym_of',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='synonyms', to='policies.Node'),
        ),
        migrations.AddField(
            model_name='licence',
            name='node',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='policies.Node'),
        ),
        migrations.AddField(
            model_name='greenpolicy',
            name='node',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='policies.Node'),
        ),
        migrations.AddField(
            model_name='greenpolicy',
            name='outlet',
            field=models.ManyToManyField(help_text='Please select all self-archiving outlets this policy applies to.', related_name='journals', to='policies.Outlet', verbose_name='self-archiving outlets'),
        ),
        migrations.AddField(
            model_name='greenpolicy',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='policies.Source'),
        ),
        migrations.AddField(
            model_name='goldpolicy',
            name='default_licence',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='policies.Licence'),
        ),
        migrations.AddField(
            model_name='goldpolicy',
            name='licence_options',
            field=models.ManyToManyField(blank=True, related_name='journals', to='policies.Licence'),
        ),
        migrations.AddField(
            model_name='goldpolicy',
            name='node',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='policies.Node'),
        ),
        migrations.AddField(
            model_name='goldpolicy',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='policies.Source'),
        ),
        migrations.AddField(
            model_name='contact',
            name='node',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='policies.Node'),
        ),
        migrations.AddField(
            model_name='contact',
            name='responsibilities',
            field=models.ManyToManyField(blank=True, to='policies.Responsibility'),
        ),
    ]
